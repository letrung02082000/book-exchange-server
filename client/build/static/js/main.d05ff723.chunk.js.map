{"version":3,"sources":["components/FormEditBook.js","components/FormAddCategory.js","components/FormAddStation.js","components/BookManager.js","components/Book.js","components/OrderDetail.js","components/OrderManagement.js","App.js","reportWebVitals.js","index.js"],"names":["props","useState","allCategories","setAllCategories","allStations","setAllStations","children","others","setOthers","key","value","newOther","setNewOther","category","setCategory","station","setStation","useEffect","axios","get","then","res","data","type","_id","err","setError","Form","style","width","onSubmit","e","preventDefault","bookInf","sku","document","getElementById","name","oldprice","newprice","imageurl","description","quantity","console","log","post","book","updateBook","handleClose","Modal","onHide","show","Header","closeButton","Body","map","color","Group","controlId","Label","Control","required","defaultValue","placeholder","as","onChange","target","child","title","display","flexDirection","step","Image","className","src","rows","Table","striped","bordered","hover","index","tmp","Button","variant","onClick","splice","length","push","float","FormAddCategory","setName","desc","setDesc","alert","justifyContent","FormAddStation","address","setAddress","latitude","setLatitude","longitude","setLongitude","parseFloat","isNaN","page","setPage","setData","dialog","setDialog","showedBook","setShowedBook","showedCategory","setShowedCategory","showedStation","setShowedStation","params","limit","backdrop","dialogClassName","Title","i","unshift","message","Footer","button","action","responsive","size","cursor","substr","slice","fontSize","margin","backgroundColor","Book","alt","OrderDetail","bookList","setBookList","pending","setPending","success","setSuccess","loading","setLoading","order","discardOrder","id","status","refreshPage","ButtonGroup","OrderManagement","setShow","setOrder","orderId","orderDate","user","tel","shipping","payment","total","handleSeeDetail","App","cookie","split","output","forEach","pair","join","checkLogined","handleShow","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6aAMe,G,MAAA,SAACA,GAAW,IAAD,EACoBC,mBAAS,IAD7B,mBACfC,EADe,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAEfG,EAFe,KAEFC,EAFE,OAGMJ,mBAASD,EAAMM,SAASC,QAAU,IAHxC,mBAGfA,EAHe,KAGPC,EAHO,OAIUP,mBAAS,CAAEQ,IAAK,GAAIC,MAAO,KAJrC,mBAIfC,EAJe,KAILC,EAJK,OAKUX,mBAAS,MALnB,mBAKfY,EALe,KAKLC,EALK,OAMQb,mBAAS,4BANjB,mBAMfc,EANe,KAMNC,EANM,KAQtBC,qBAAU,WACNC,IACKC,IAAI,qBACJC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACC,GACc,UAAbA,EAAIE,KACJpB,EAAiBkB,EAAIC,MAErBnB,EAAiB,OAI7Be,IACKC,IAAI,sBACJC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACC,GACc,UAAbA,EAAIE,KACJlB,EAAegB,EAAIC,MAEnBjB,EAAe,OAIvBL,EAAMM,SAASO,UACfC,EAAYd,EAAMM,SAASO,SAASW,KAGpCxB,EAAMM,SAASS,SACfC,EAAWhB,EAAMM,SAASS,QAAQS,OAEvC,IAtCmB,MAqFEvB,mBAAS,MArFX,mBAqFfwB,EArFe,KAqFVC,EArFU,KAsFtB,OACI,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAAUC,SAvCpC,SAAwBC,GACpBA,EAAEC,iBACF,IAAIC,EAAU,CACVC,IAAKC,SAASC,eAAe,gBAAgB1B,MAC7C2B,KAAMF,SAASC,eAAe,qBAAqB1B,MACnD4B,SAAUH,SAASC,eAAe,qBAAqB1B,OAAS,EAChE6B,SAAUJ,SAASC,eAAe,qBAAqB1B,OAAS,EAChE8B,SAAUL,SAASC,eAAe,qBAAqB1B,MACvD+B,YAAaN,SAASC,eAAe,wBAAwB1B,MAC7DgC,SAAUP,SAASC,eAAe,qBAAqB1B,OAAS,EAChEG,SAAUA,EACVE,QAASA,EACTR,OAAQA,GAGZoC,QAAQC,IAAIX,GAEZf,IACK2B,KAAK,iBAAkB,CACpBrB,IAAKxB,EAAMM,SAASkB,IACpBsB,KAAMb,IAETb,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACC,GACa,SAAZA,EAAIE,KACAF,EAAII,IACJC,EAASL,EAAII,MAEbzB,EAAM+C,WAAN,aACIvB,IAAKxB,EAAMM,SAASkB,KACjBS,IAEPjC,EAAMgD,eAEPtB,EAAS,CAAC,6CAKzB,UACI,eAACuB,EAAA,EAAD,CAAOC,OAAQ,kBAAMxB,EAAS,OAAOyB,OAAQ1B,EAA7C,UACI,cAACwB,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,sBACA,cAACJ,EAAA,EAAMK,KAAP,UACK7B,GACGA,EAAI8B,KAAI,SAACxB,GAAD,OAAO,mBAAGH,MAAO,CAAE4B,MAAO,WAAnB,SAAiCzB,YAI5D,eAACJ,EAAA,EAAK8B,MAAN,CAAYC,UAAU,eAAtB,UACI,cAAC/B,EAAA,EAAKgC,MAAN,8BACA,cAAChC,EAAA,EAAKiC,QAAN,CACIC,UAAQ,EACRC,aAAc9D,EAAMM,SAAS4B,IAC7BX,KAAK,SACLwC,YAAY,iCAGpB,eAACpC,EAAA,EAAK8B,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAAC/B,EAAA,EAAKgC,MAAN,6BACA,cAAChC,EAAA,EAAKiC,QAAN,CACIC,UAAQ,EACRC,aAAc9D,EAAMM,SAAS+B,KAC7Bd,KAAK,OACLwC,YAAY,gCAGpB,eAACpC,EAAA,EAAK8B,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAAC/B,EAAA,EAAKgC,MAAN,iCACA,cAAChC,EAAA,EAAKiC,QAAN,CACIC,UAAQ,EACRnD,MAAOG,EACPmD,GAAG,SACHD,YAAY,+BACZE,SAjFa,SAAClC,GAC1BjB,EAAYiB,EAAEmC,OAAOxD,QA2Eb,SAOKR,EAAcqD,KAAI,SAACY,GAAD,OACf,wBAAQzD,MAAOyD,EAAM3C,IAArB,SAA2B2C,EAAM9B,eAI7C,eAACV,EAAA,EAAK8B,MAAN,CAAYC,UAAU,mBAAtB,UACI,cAAC/B,EAAA,EAAKgC,MAAN,2DACA,cAAChC,EAAA,EAAKiC,QAAN,CACIC,UAAQ,EACRnD,MAAOK,EACPiD,GAAG,SACHD,YAAY,4BACZE,SA3FY,SAAClC,GACzBf,EAAWe,EAAEmC,OAAOxD,QAqFZ,SAOKN,EAAYmD,KAAI,SAACY,GAAD,OACb,wBAAQzD,MAAOyD,EAAM3C,IAArB,SAA2B2C,EAAMC,gBAI7C,sBACIxC,MAAO,CAAEyC,QAAS,OAAQC,cAAe,MAAOzC,MAAO,QAD3D,UAGI,eAACF,EAAA,EAAK8B,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAAC/B,EAAA,EAAKgC,MAAN,sCACA,cAAChC,EAAA,EAAKiC,QAAN,CACIC,UAAQ,EACRC,aAAc9D,EAAMM,SAASgC,UAAY,EACzCf,KAAK,SACLwC,YAAY,mBACZQ,KAAM,SAGd,eAAC5C,EAAA,EAAK8B,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAAC/B,EAAA,EAAKgC,MAAN,sCACA,cAAChC,EAAA,EAAKiC,QAAN,CACIC,UAAQ,EACRC,aAAc9D,EAAMM,SAASiC,UAAY,EACzChB,KAAK,SACLwC,YAAY,mBACZQ,KAAM,SAGd,eAAC5C,EAAA,EAAK8B,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAAC/B,EAAA,EAAKgC,MAAN,uCACA,cAAChC,EAAA,EAAKiC,QAAN,CACIE,aAAc9D,EAAMM,SAASoC,SAC7BnB,KAAK,SACLwC,YAAY,4CAIxB,eAACpC,EAAA,EAAK8B,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAAC/B,EAAA,EAAKgC,MAAN,6DACA,cAAChC,EAAA,EAAKiC,QAAN,CACIE,aAAc9D,EAAMM,SAASkC,SAE7BuB,YAAY,6DAEhB,cAACS,EAAA,EAAD,CAAOC,UAAU,aAAaC,IAAK1E,EAAMM,SAASkC,cAEtD,eAACb,EAAA,EAAK8B,MAAN,CAAYC,UAAU,uBAAtB,UACI,cAAC/B,EAAA,EAAKgC,MAAN,4BACA,cAAChC,EAAA,EAAKiC,QAAN,CACII,GAAG,WACHW,KAAM,GACNb,aAAc9D,EAAMM,SAASmC,YAC7BlB,KAAK,OACLwC,YAAY,qBAIpB,cAACpC,EAAA,EAAKgC,MAAN,8CACA,eAACiB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,+BACI,mCACA,8CAEA,+CACA,6DAGR,kCACKxE,GACGA,EAAOgD,KAAI,SAACxB,EAAGiD,GAAJ,OACP,+BACI,6BAAKA,EAAQ,IACb,6BACI,uBACItE,MAAOH,EAAOyE,GAAOvE,IACrBwD,SAAU,SAAClC,GACP,IAAIkD,EAAG,YAAO1E,GACd0E,EAAID,GAAOvE,IAAMsB,EAAEmC,OAAOxD,MAC1BF,EAAUyE,QAItB,6BACI,uBACIvE,MAAOH,EAAOyE,GAAOtE,MACrBuD,SAAU,SAAClC,GACP,IAAIkD,EAAG,YAAO1E,GACd0E,EAAID,GAAOtE,MAAQqB,EAAEmC,OAAOxD,MAC5BF,EAAUyE,QAItB,6BACI,cAACC,EAAA,EAAD,CACIC,QAAQ,SACRC,QAAS,SAACJ,GACN,IAAIC,EAAG,YAAO1E,GACd0E,EAAII,OAAOL,EAAO,GAElBxE,EAAUyE,IANlB,wBAvBCD,MAqCjB,+BACI,6BAAKzE,GAAUA,EAAO+E,SACtB,6BACI,uBACIvB,YAAY,6CACZrD,MAAOC,EAASF,IAChBwD,SAAU,SAAClC,GACPnB,EAAY,2BACLD,GADI,IAEPF,IAAKsB,EAAEmC,OAAOxD,cAK9B,6BACI,uBACIqD,YAAY,+BACZrD,MAAOC,EAASD,MAChBuD,SAAU,SAAClC,GACPnB,EAAY,2BACLD,GADI,IAEPD,MAAOqB,EAAEmC,OAAOxD,cAKhC,6BACI,cAACwE,EAAA,EAAD,CACIE,QAAS,WACL,IAAIH,EAAG,YAAO1E,GACd0E,EAAIM,KAAK5E,GACTC,EAAY,CAAEH,IAAK,GAAIC,MAAO,KAE9BF,EAAUyE,IANlB,gCAgBhB,eAACC,EAAA,EAAD,CAEItD,MAAO,CAAE4D,MAAO,SAChBL,QAAQ,UACR5D,KAAK,SAJT,UAMMvB,EAAMM,SAASkB,IAAe,qBAAT,UAN3B,cAQA,cAAC0D,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMpF,EAAMgD,eAAjD,2BCjPGyC,MAzDf,SAAyBzF,GAAQ,IAAD,EACJC,mBAAS,MADL,mBACrBoC,EADqB,KACfqD,EADe,OAEJzF,mBAAS,MAFL,mBAErB0F,EAFqB,KAEfC,EAFe,KAyB5B,OACI,eAACjE,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAAUC,SAvBf,SAACC,GAClBA,EAAEC,iBACFW,QAAQC,IAAIP,GACZnB,IACK2B,KAAK,uBAAwB,CAAER,KAAMA,EAAMI,YAAakD,IACxDvE,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACC,GACc,UAAbA,EAAIE,KACJvB,EAAMgD,cAEN6C,MAAM,WAAQxE,EAAII,SAa9B,UACI,eAACE,EAAA,EAAK8B,MAAN,WACI,cAAC9B,EAAA,EAAKgC,MAAN,wCACA,cAAChC,EAAA,EAAKiC,QAAN,CACIrC,KAAK,OACLsC,UAAQ,EACRI,SAdS,SAAClC,GACtB2D,EAAQ3D,EAAEmC,OAAOxD,aAgBb,eAACiB,EAAA,EAAK8B,MAAN,WACI,cAAC9B,EAAA,EAAKgC,MAAN,4BACA,cAAChC,EAAA,EAAKiC,QAAN,CACII,GAAG,WACHW,KAAM,EACNV,SAlBS,SAAClC,GACtB6D,EAAQ7D,EAAEmC,OAAOxD,aAoBb,eAACiB,EAAA,EAAK8B,MAAN,CACI7B,MAAO,CAAEyC,QAAS,OAAQyB,eAAgB,iBAD9C,UAGI,cAACZ,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASpF,EAAMgD,YAAxC,sBAGA,cAACkC,EAAA,EAAD,CAAQC,QAAQ,UAAU5D,KAAK,SAA/B,4BCmEDwE,MApHf,SAAwB/F,GAAQ,IAAD,EACHC,mBAAS,MADN,mBACpBoC,EADoB,KACdqD,EADc,OAEHzF,mBAAS,MAFN,mBAEpB0F,EAFoB,KAEdC,EAFc,OAGG3F,mBAAS,MAHZ,mBAGpB+F,EAHoB,KAGXC,EAHW,OAIKhG,mBAAS,MAJd,mBAIpBiG,EAJoB,KAIVC,EAJU,OAKOlG,mBAAS,MALhB,mBAKpBmG,EALoB,KAKTC,EALS,KAsD3B,OACI,eAAC1E,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAAUC,SAjDf,SAACC,GAMlB,GALAA,EAAEC,iBAEFmE,EAAYG,WAAWJ,IACvBG,EAAaC,WAAWF,IAEpBG,MAAML,IAAaK,MAAMH,GACzB,OAAOP,MAAM,yDAGjB3E,IACK2B,KAAK,mBAAoB,CACtBuB,MAAO/B,EACPI,YAAakD,EACbK,UACAE,WACAE,cAEHhF,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACC,GACc,UAAbA,EAAIE,KACJvB,EAAMgD,cAEN6C,MAAM,WAAQxE,EAAII,SA0B9B,UACI,eAACE,EAAA,EAAK8B,MAAN,WACI,cAAC9B,EAAA,EAAKgC,MAAN,8DACA,cAAChC,EAAA,EAAKiC,QAAN,CACIrC,KAAK,OACLsC,UAAQ,EACRI,SA3BS,SAAClC,GACtB2D,EAAQ3D,EAAEmC,OAAOxD,aA8Bb,eAACiB,EAAA,EAAK8B,MAAN,WACI,cAAC9B,EAAA,EAAKgC,MAAN,4BACA,cAAChC,EAAA,EAAKiC,QAAN,CACII,GAAG,WACHW,KAAM,EACNV,SAhCS,SAAClC,GACtB6D,EAAQ7D,EAAEmC,OAAOxD,aAmCb,eAACiB,EAAA,EAAK8B,MAAN,WACI,cAAC9B,EAAA,EAAKgC,MAAN,qCACA,cAAChC,EAAA,EAAKiC,QAAN,CACII,GAAG,WACHW,KAAM,EACNd,UAAQ,EACRI,SAtCY,SAAClC,GACzBkE,EAAWlE,EAAEmC,OAAOxD,aAyChB,eAACiB,EAAA,EAAK8B,MAAN,WACI,cAAC9B,EAAA,EAAKgC,MAAN,uBACA,cAAChC,EAAA,EAAKiC,QAAN,CACIrC,KAAK,OACLsC,UAAQ,EACRI,SA3Ca,SAAClC,GAC1BoE,EAAYpE,EAAEmC,OAAOxD,aA8CjB,eAACiB,EAAA,EAAK8B,MAAN,WACI,cAAC9B,EAAA,EAAKgC,MAAN,wBACA,cAAChC,EAAA,EAAKiC,QAAN,CACIrC,KAAK,OACLsC,UAAQ,EACRI,SAhDc,SAAClC,GAC3BsE,EAAatE,EAAEmC,OAAOxD,aAmDlB,eAACiB,EAAA,EAAK8B,MAAN,CACI7B,MAAO,CAAEyC,QAAS,OAAQyB,eAAgB,iBAD9C,UAGI,cAACZ,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASpF,EAAMgD,YAAxC,sBAGA,cAACkC,EAAA,EAAD,CAAQC,QAAQ,UAAU5D,KAAK,SAA/B,4BCxGD,WAACvB,GAAW,IAAD,EACEC,mBAAS,GADX,mBACfuG,EADe,KACTC,EADS,OAEExG,mBAAS,IAFX,mBAEfqB,EAFe,KAEToF,EAFS,OAGMzG,mBAAS,MAHf,mBAGf0G,EAHe,KAGPC,EAHO,WAKc3G,mBAAS,MALvB,mBAKf4G,EALe,KAKHC,EALG,OAMsB7G,mBAAS,MAN/B,mBAMf8G,EANe,KAMCC,EAND,OAOoB/G,mBAAS,MAP7B,mBAOfgH,EAPe,KAOAC,EAPA,KAStBjG,qBAAU,WACNC,IACKC,IAAI,kBAAmB,CAAEgG,OAAQ,CAAEC,MAAO,GAAIZ,KAAMA,KACpDpF,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACC,GACHsB,QAAQC,IAAIvB,GACI,SAAZA,EAAIE,KAAiBmF,EAAQrF,EAAIC,MAChCoF,EAAQ,SAEtB,CAACF,IAmCJ,OACI,sBAAK/B,UAAU,kBAAf,UACI,eAACxB,EAAA,EAAD,CACIE,OAAQ0D,EACR3D,OAAQ,kBAAM4D,EAAc,OAC5BO,SAAS,SAETC,gBAAgB,YALpB,UAOI,cAACrE,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,eAACJ,EAAA,EAAMsE,MAAP,WACKV,GAAcA,EAAWrF,IAAM,OAAS,MAD7C,aAIJ,cAACyB,EAAA,EAAMK,KAAP,UACKuD,GACG,cAAC,EAAD,CACI9D,WAnDL,SAACD,GAGhB,IAFA,IAAImC,EAAG,YAAO3D,GAELkG,EAAI,EAAGA,EAAIvC,EAAIK,OAAQkC,IAC5B,GAAIvC,EAAIuC,GAAGhG,KAAOsB,EAAKtB,IAGnB,OAFAyD,EAAIuC,GAAK1E,OACT4D,EAAQzB,GAIhBA,EAAIwC,QAAQ3E,GACZ4D,EAAQzB,IAyCYjC,YAAa,kBAAM8D,EAAc,OAFrC,SAIKD,SAKjB,eAAC5D,EAAA,EAAD,CACIE,OAAQwD,EACRzD,OAAQ,kBAAM0D,EAAU,OACxBS,SAAS,SAHb,UAMI,cAACpE,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMsE,MAAP,UAAcZ,GAAUA,EAAOvC,UAEnC,cAACnB,EAAA,EAAMK,KAAP,UAAaqD,GAAUA,EAAOe,UAC9B,cAACzE,EAAA,EAAM0E,OAAP,UACKhB,GACGA,EAAOiB,QACPjB,EAAOiB,OAAOrE,KAAI,SAACxB,GAAD,OACd,cAACmD,EAAA,EAAD,CAEIE,QAAS,WACLrD,EAAE8F,UAEN1C,QAASpD,EAAEH,MALf,SAOKG,EAAEqC,OANErC,EAAEqC,eAY3B,eAACnB,EAAA,EAAD,CACIE,OAAQ4D,EACR7D,OAAQ,kBAAM8D,EAAkB,OAChCK,SAAS,SAHb,UAMI,cAACpE,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMsE,MAAP,mDAEJ,cAACtE,EAAA,EAAMK,KAAP,UACKyD,GACG,cAAC,EAAD,CACI/D,YAAa,kBAAMgE,EAAkB,cAKrD,eAAC/D,EAAA,EAAD,CACIE,OAAQ8D,EACR/D,OAAQ,kBAAMgE,EAAiB,OAC/BG,SAAS,SAHb,UAMI,cAACpE,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMsE,MAAP,qEAEJ,cAACtE,EAAA,EAAMK,KAAP,UACK2D,GACG,cAAC,EAAD,CACIjE,YAAa,kBAAMkE,EAAiB,cAKpD,gCACI,yDACA,sBAAKzC,UAAU,UAAf,UACI,cAACS,EAAA,EAAD,CACIT,UAAU,mBACVW,QAAS,kBAAM0B,EAAc,CAAEtF,IAAK,QAFxC,6BAMA,cAAC0D,EAAA,EAAD,CACIT,UAAU,uBACVW,QAAS,kBAAM4B,GAAkB,IAFrC,wCAMA,cAAC9B,EAAA,EAAD,CACIT,UAAU,sBACVW,QAAS,kBAAM8B,GAAiB,IAFpC,2CAQR,eAACtC,EAAA,EAAD,CACIkD,YAAU,EACVrD,UAAU,QACVI,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLgD,KAAK,KANT,UAQI,gCACI,+BACI,mCACA,qCACA,wCACA,gDACA,iDACA,yDACA,+CACA,yCACA,6DAGR,gCACoB,GAAfzG,EAAKgE,OACFhE,EAAKiC,KAAI,SAACxB,EAAGiD,GAAJ,OACL,qBAAIpD,MAAO,CAAEoG,OAAQ,WAArB,UACI,6BAAKhD,EAAQ,IACb,6BAAKjD,EAAEG,MACP,6BAAKH,EAAEM,OACP,6BAAKN,EAAEO,WACP,6BAAKP,EAAEQ,WACP,6BAAKR,EAAEW,WACP,6BACKX,EAAEU,YACGV,EAAEU,YAAYwF,OAAO,EAAG,IAAM,MAC9B,KAEV,qBAAI7C,QAAS,kBAAM0B,EAAc/E,IAAjC,UACKA,EAAExB,QACCwB,EAAExB,OAAO2H,MAAM,EAAG,GAAG3E,KAAI,SAACxB,GAAD,OACrB,mBACIH,MAAO,CACHuG,SAAU,GACVC,OAAQ,GAHhB,SAMKrG,EAAEtB,IAAM,KAAOsB,EAAErB,WAG7BqB,EAAExB,QAAUwB,EAAExB,OAAO+E,OAAS,GAC3B,uCAGR,6BACI,cAACJ,EAAA,EAAD,CACIE,QAAS,kBAAM0B,EAAc/E,IAC7BoD,QAAQ,YAFZ,0BA7B+BpD,EAAEP,QAwE7C,uEAIZ,qBAAIiD,UAAU,WAAd,UACI,6BAAK+B,EAAO,GAAK,sCAEjB,qBAAIpB,QAAS,kBAAMqB,EAAQD,EAAO,IAAlC,UACKA,EAAO,EAAI,GAAK,4BAAIA,EAAO,IAAQ,OAGxC,qBAAIpB,QAAS,kBAAMqB,EAAQD,EAAO,IAAlC,UACKA,EAAO,EAAI,GAAK,4BAAIA,EAAO,IAAQ,OAGxC,oBAAI5E,MAAO,CAAEyG,gBAAiB,WAA9B,SACI,4BAAI7B,MAER,oBAAIpB,QAAS,kBAAMqB,EAAQD,EAAO,IAAlC,SACI,4BAAIA,EAAO,MAEf,oBAAIpB,QAAS,kBAAMqB,EAAQD,EAAO,IAAlC,SACI,4BAAIA,EAAO,MAEf,+BACK,IACD,8C,uBC1PL8B,MArCf,SAActI,GACV,IAAMsB,EAAOtB,EAAMsB,KAEnB,OADAqB,QAAQC,IAAItB,GAER,8BACI,eAACsD,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,+BACI,mCACA,kDACA,gDACA,8DAGR,gCACKzD,EAAKiC,KAAI,SAACY,EAAOa,GACd,OACI,+BACI,6BAAKA,EAAQ,IACb,6BACI,qBACIN,IAAKP,EAAMrB,KAAKN,SAChB+F,IAAI,MACJ9D,UAAU,eAGlB,6BAAKN,EAAMrB,KAAKT,OAChB,6BAAK8B,EAAMzB,yBCwE5B8F,MAlGf,SAAqBxI,GAAQ,IAAD,EACQC,mBAAS,IADjB,mBACjBwI,EADiB,KACPC,EADO,OAEMzI,oBAAS,GAFf,mBAEjB0I,EAFiB,KAERC,EAFQ,OAGM3I,oBAAS,GAHf,mBAGjB4I,EAHiB,KAGRC,EAHQ,OAIM7I,oBAAS,GAJf,mBAIjB8I,EAJiB,KAIRC,EAJQ,KAMxB/H,qBAAU,WACFjB,EAAMiJ,QACNP,EAAY1I,EAAMiJ,MAAMR,UACxBK,EAAW9I,EAAMiJ,MAAMJ,SACvBD,EAAW5I,EAAMiJ,MAAMN,YAE5B,CAAC3I,EAAMiJ,QAEV,IAAMC,EAAe,WACjBF,GAAW,GACX9H,IACK2B,KAAK,oBAAqB,CAAEsG,GAAInJ,EAAMiJ,MAAMzH,IAAK4H,OAAQ,IACzDhI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACC,GACa,SAAZA,EAAIE,OACJqH,GAAW,GACXE,GAAW,GACXE,GAAW,GACXhJ,EAAMqJ,mBAoBtB,OACI,8BACI,eAACpG,EAAA,EAAD,CACIE,KAAMnD,EAAMmD,KACZD,OAAQlD,EAAMgD,YACdqE,SAAS,SAHb,UAKI,cAACpE,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMsE,MAAP,oDAEJ,cAACtE,EAAA,EAAMK,KAAP,UACI,cAAC,EAAD,CAAMhC,KAAMmH,MAEfM,EACG,cAAC9F,EAAA,EAAM0E,OAAP,UACI,0DAGJ,cAAC1E,EAAA,EAAM0E,OAAP,UACKgB,EACG,eAACW,EAAA,EAAD,WACI,cAACpE,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAAS8D,EAAlC,oCAGA,cAAChE,EAAA,EAAD,CACIC,QAAQ,UACRC,QAzCR,WACpB4D,GAAW,GACX9H,IACK2B,KAAK,oBAAqB,CAAEsG,GAAInJ,EAAMiJ,MAAMzH,IAAK4H,OAAQ,IACzDhI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACC,GACa,SAAZA,EAAIE,OACJqH,GAAW,GACXE,GAAW,GACXE,GAAW,GACXhJ,EAAMqJ,mBA6BM,8CAQJ,gCACI,oDACgB,IACXR,EAAU,wBAAoB,yBAElCA,EACG,cAAC3D,EAAA,EAAD,CACIC,QAAQ,SACRC,QAAS8D,EAFb,oCAMA,gBC2BrBK,MAlHf,WAA4B,IAAD,EACCtJ,mBAAS,GADV,mBAChBuG,EADgB,aAECvG,mBAAS,KAFV,mBAEhBqB,EAFgB,KAEVoF,EAFU,OAGCzG,oBAAS,GAHV,mBAGhBkD,EAHgB,KAGVqG,EAHU,OAIGvJ,mBAAS,MAJZ,mBAIhBgJ,EAJgB,KAITQ,EAJS,KAqCvB,OA/BAxI,qBAAU,WACNC,IACKC,IAAI,aAAc,CAAEgG,OAAQ,CAAEX,KAAMA,EAAMY,MAAO,MACjDhG,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACC,GACa,SAAZA,EAAIE,MACJmF,EAAQrF,EAAIC,WAGzB,CAACkF,IAuBA,sBAAK/B,UAAU,YAAf,UACI,qEACA,eAACG,EAAA,EAAD,CACIkD,YAAU,EACVrD,UAAU,QACVI,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLgD,KAAK,KANT,UAQI,gCACI,+BACI,mCACA,6DACA,uDACA,4EACA,oEACA,oDACA,qDACA,6DAGR,gCACKzG,EAAKiC,KAAI,SAACY,EAAOa,GACd,OACI,+BACI,6BAAKA,EAAQ,IACb,6BAAKb,EAAMuF,UACX,6BAAKvF,EAAMwF,YACX,+BACKxF,EAAMyF,KAAKvH,KACZ,uBACC8B,EAAM0F,IACP,uBACC1F,EAAM6B,WAEX,+BACK7B,EAAM2F,SACD,iCACA,oCACN,uBACC3F,EAAM4F,QACD,oCACA,kCAEV,6BACK5F,EAAMwE,QACD,0BACAxE,EAAM0E,QACN,mBACA,wBAEV,6BAAK1E,EAAM6F,QACX,6BACI,cAAC9E,EAAA,EAAD,CACIC,QAAQ,UACRC,QAAS,kBAlErB,SAAC6D,GACrBO,GAAQ,GACRC,EAASR,GAgEsCgB,CAAgB9F,IAFnC,mCA7BCA,EAAM3C,aAyC/B,cAAC,EAAD,CACIyH,MAAOA,EACP9F,KAAMA,EACNH,YA1EQ,WAChBwG,GAAQ,IA0EAH,YA3FQ,SAACJ,GACjB/H,IACKC,IAAI,aAAc,CAAEgG,OAAQ,CAAEX,KAAMA,EAAMY,MAAO,MACjDhG,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACC,GACa,SAAZA,EAAIE,MACJmF,EAAQrF,EAAIC,gBC+CjB4I,MApEf,WACIvH,QAAQC,IAAIT,SAASgI,OAAOC,MAAM,MAUlCnJ,qBAAU,YATV,WACI,IAAIoJ,EAAS,GAMb,OALAlI,SAASgI,OAAOC,MAAM,WAAWE,SAAQ,SAAUC,GAC/CA,EAAOA,EAAKH,MAAM,WAClBC,EAAOE,EAAK,IAAMA,EAAKlF,OAAO,GAAGmF,KAAK,UAGjCH,EAAM,OAGVI,IAAgBC,MACtB,IAbQ,MAeazK,oBAAS,GAftB,mBAeEuJ,GAfF,WAiBLkB,EAAa,kBAAMlB,GAAQ,IACjC,OACI,qBAAK/E,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAACkG,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACI,eAACC,EAAA,EAAD,WACI,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,SACI,qBAAKzC,IAAI,OAAO7D,IAAI,YAAYD,UAAU,WAE9C,cAACkG,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,cAACP,EAAA,EAAOQ,SAAR,CAAiBhC,GAAG,mBAApB,SACI,eAACiC,EAAA,EAAD,CAAK3G,UAAU,UAAf,UACI,cAAC2G,EAAA,EAAIC,KAAL,CAAUrH,GAAIqH,IAAMC,GAAG,IAAvB,qCAGA,cAACF,EAAA,EAAIC,KAAL,CAAUrH,GAAIqH,IAAMC,GAAG,SAAvB,2DAqBhB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,EAAD,eCvDTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtK,MAAK,YAAkD,IAA/CuK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/J,SAASC,eAAe,SAM1BoJ,M","file":"static/js/main.d05ff723.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Form, Button, Table, Modal, Image } from 'react-bootstrap';\r\n\r\nimport './FormEditBook.css';\r\n\r\nexport default (props) => {\r\n    const [allCategories, setAllCategories] = useState([]);\r\n    const [allStations, setAllStations] = useState([]);\r\n    const [others, setOthers] = useState(props.children.others || []);\r\n    const [newOther, setNewOther] = useState({ key: '', value: '' });\r\n    const [category, setCategory] = useState(null);\r\n    const [station, setStation] = useState('606494f90494e72dbcbee3b9');\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('/api/category/all')\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                if (res.type === 'Valid') {\r\n                    setAllCategories(res.data);\r\n                } else {\r\n                    setAllCategories([]);\r\n                }\r\n            });\r\n\r\n        axios\r\n            .get('/api/station/query')\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                if (res.type === 'Valid') {\r\n                    setAllStations(res.data);\r\n                } else {\r\n                    setAllStations([]);\r\n                }\r\n            });\r\n\r\n        if (props.children.category) {\r\n            setCategory(props.children.category._id);\r\n        }\r\n\r\n        if (props.children.station) {\r\n            setStation(props.children.station._id);\r\n        }\r\n    }, []);\r\n\r\n    const handleChangeCategory = (e) => {\r\n        setCategory(e.target.value);\r\n    };\r\n\r\n    const handleChangeStation = (e) => {\r\n        setStation(e.target.value);\r\n    };\r\n\r\n    function handlePushBook(e) {\r\n        e.preventDefault();\r\n        let bookInf = {\r\n            sku: document.getElementById('formBasicSku').value,\r\n            name: document.getElementById('formBasicBookname').value,\r\n            oldprice: document.getElementById('formBasicOldPrice').value || 0,\r\n            newprice: document.getElementById('formBasicNewPrice').value || 0,\r\n            imageurl: document.getElementById('formBasicUrlImage').value,\r\n            description: document.getElementById('formBasicDescription').value,\r\n            quantity: document.getElementById('formBasicQuantity').value || 0,\r\n            category: category,\r\n            station: station,\r\n            others: others,\r\n        };\r\n\r\n        console.log(bookInf);\r\n\r\n        axios\r\n            .post('/api/book/push', {\r\n                _id: props.children._id,\r\n                book: bookInf,\r\n            })\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                if (res.type == 'Valid') {\r\n                    if (res.err) {\r\n                        setError(res.err);\r\n                    } else {\r\n                        props.updateBook({\r\n                            _id: props.children._id,\r\n                            ...bookInf,\r\n                        });\r\n                        props.handleClose();\r\n                    }\r\n                } else setError(['Lỗi form các giá trị']);\r\n            });\r\n    }\r\n    const [err, setError] = useState(null);\r\n    return (\r\n        <Form style={{ width: '100%' }} onSubmit={handlePushBook}>\r\n            <Modal onHide={() => setError(null)} show={!!err}>\r\n                <Modal.Header closeButton>Lỗi</Modal.Header>\r\n                <Modal.Body>\r\n                    {err &&\r\n                        err.map((e) => <p style={{ color: '#ff0000' }}>{e}</p>)}\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Form.Group controlId='formBasicSku'>\r\n                <Form.Label>Mã vạch</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    defaultValue={props.children.sku}\r\n                    type='number'\r\n                    placeholder='Nhập mã vạch'\r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId='formBasicBookname'>\r\n                <Form.Label>Tên sách</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    defaultValue={props.children.name}\r\n                    type='text'\r\n                    placeholder='Nhập tên sách'\r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId='formBasicCategory'>\r\n                <Form.Label>Thể loại</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    value={category}\r\n                    as='select'\r\n                    placeholder='Chọn thể loại'\r\n                    onChange={handleChangeCategory}\r\n                >\r\n                    {allCategories.map((child) => (\r\n                        <option value={child._id}>{child.name}</option>\r\n                    ))}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='formBasicStation'>\r\n                <Form.Label>Tủ sách/Điểm đọc</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    value={station}\r\n                    as='select'\r\n                    placeholder='Chọn tủ sách'\r\n                    onChange={handleChangeStation}\r\n                >\r\n                    {allStations.map((child) => (\r\n                        <option value={child._id}>{child.title}</option>\r\n                    ))}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <div\r\n                style={{ display: 'flex', flexDirection: 'row', width: '100%' }}\r\n            >\r\n                <Form.Group controlId='formBasicOldPrice'>\r\n                    <Form.Label>Giá cũ (đ)</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        defaultValue={props.children.oldprice || 0}\r\n                        type='number'\r\n                        placeholder='Nhập giá'\r\n                        step={1000}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='formBasicNewPrice'>\r\n                    <Form.Label>Giá mới(đ)</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        defaultValue={props.children.newprice || 0}\r\n                        type='number'\r\n                        placeholder='Nhập giá'\r\n                        step={1000}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='formBasicQuantity'>\r\n                    <Form.Label>Số lượng </Form.Label>\r\n                    <Form.Control\r\n                        defaultValue={props.children.quantity}\r\n                        type='number'\r\n                        placeholder='Nhập số lượng'\r\n                    />\r\n                </Form.Group>\r\n            </div>\r\n            <Form.Group controlId='formBasicUrlImage'>\r\n                <Form.Label>Đường dẫn hình ảnh</Form.Label>\r\n                <Form.Control\r\n                    defaultValue={props.children.imageurl}\r\n                    // type=\"url\"\r\n                    placeholder='Nhập đường dẫn hình ảnh'\r\n                />\r\n                <Image className='book-image' src={props.children.imageurl} />\r\n            </Form.Group>\r\n            <Form.Group controlId='formBasicDescription'>\r\n                <Form.Label>Mô tả</Form.Label>\r\n                <Form.Control\r\n                    as='textarea'\r\n                    rows={10}\r\n                    defaultValue={props.children.description}\r\n                    type='text'\r\n                    placeholder='Mô tả'\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Label>Thông tin sản phẩm</Form.Label>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Thông tin</th>\r\n\r\n                        <th>Mô tả</th>\r\n                        <th>Hành động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {others &&\r\n                        others.map((e, index) => (\r\n                            <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>\r\n                                    <input\r\n                                        value={others[index].key}\r\n                                        onChange={(e) => {\r\n                                            let tmp = [...others];\r\n                                            tmp[index].key = e.target.value;\r\n                                            setOthers(tmp);\r\n                                        }}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <input\r\n                                        value={others[index].value}\r\n                                        onChange={(e) => {\r\n                                            let tmp = [...others];\r\n                                            tmp[index].value = e.target.value;\r\n                                            setOthers(tmp);\r\n                                        }}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <Button\r\n                                        variant='danger'\r\n                                        onClick={(index) => {\r\n                                            let tmp = [...others];\r\n                                            tmp.splice(index, 1);\r\n\r\n                                            setOthers(tmp);\r\n                                        }}\r\n                                    >\r\n                                        Xóa\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    <tr>\r\n                        <td>{others && others.length}</td>\r\n                        <td>\r\n                            <input\r\n                                placeholder='Ví dụ: năm xuất bản'\r\n                                value={newOther.key}\r\n                                onChange={(e) => {\r\n                                    setNewOther({\r\n                                        ...newOther,\r\n                                        key: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <input\r\n                                placeholder='Ví dụ: năm 2021'\r\n                                value={newOther.value}\r\n                                onChange={(e) => {\r\n                                    setNewOther({\r\n                                        ...newOther,\r\n                                        value: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    let tmp = [...others];\r\n                                    tmp.push(newOther);\r\n                                    setNewOther({ key: '', value: '' });\r\n\r\n                                    setOthers(tmp);\r\n                                }}\r\n                            >\r\n                                Thêm\r\n                            </Button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n\r\n            <Button\r\n                // onClick={handlePushBook}\r\n                style={{ float: 'right' }}\r\n                variant='primary'\r\n                type='submit'\r\n            >\r\n                {!props.children._id ? 'Thêm' : 'Cập nhật'} sách\r\n            </Button>\r\n            <Button variant='secondary' onClick={() => props.handleClose()}>\r\n                Thoát\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Form, Button, Table, Modal, Image } from 'react-bootstrap';\r\n\r\nfunction FormAddCategory(props) {\r\n    const [name, setName] = useState(null);\r\n    const [desc, setDesc] = useState(null);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(name);\r\n        axios\r\n            .post('/api/category/create', { name: name, description: desc })\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                if (res.type === 'Valid') {\r\n                    props.handleClose();\r\n                } else {\r\n                    alert('Lỗi' + res.err);\r\n                }\r\n            });\r\n    };\r\n\r\n    const handleNameChange = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const handleDescChange = (e) => {\r\n        setDesc(e.target.value);\r\n    };\r\n    return (\r\n        <Form style={{ width: '100%' }} onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label>Tên thể loại</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    required\r\n                    onChange={handleNameChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Mô tả</Form.Label>\r\n                <Form.Control\r\n                    as='textarea'\r\n                    rows={5}\r\n                    onChange={handleDescChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group\r\n                style={{ display: 'flex', justifyContent: 'space-between' }}\r\n            >\r\n                <Button variant='danger' onClick={props.handleClose}>\r\n                    Huỷ\r\n                </Button>\r\n                <Button variant='primary' type='submit'>\r\n                    Thêm\r\n                </Button>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default FormAddCategory;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Form, Button, InputGroup } from 'react-bootstrap';\r\n\r\nfunction FormAddStation(props) {\r\n    const [name, setName] = useState(null);\r\n    const [desc, setDesc] = useState(null);\r\n    const [address, setAddress] = useState(null);\r\n    const [latitude, setLatitude] = useState(null);\r\n    const [longitude, setLongitude] = useState(null);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setLatitude(parseFloat(latitude));\r\n        setLongitude(parseFloat(longitude));\r\n\r\n        if (isNaN(latitude) || isNaN(longitude)) {\r\n            return alert('Lỗi: không thể parse Latitude, Longitude');\r\n        }\r\n\r\n        axios\r\n            .post('/api/station/add', {\r\n                title: name,\r\n                description: desc,\r\n                address,\r\n                latitude,\r\n                longitude,\r\n            })\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                if (res.type === 'Valid') {\r\n                    props.handleClose();\r\n                } else {\r\n                    alert('Lỗi' + res.err);\r\n                }\r\n            });\r\n    };\r\n\r\n    const handleNameChange = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const handleDescChange = (e) => {\r\n        setDesc(e.target.value);\r\n    };\r\n\r\n    const handleAddressChange = (e) => {\r\n        setAddress(e.target.value);\r\n    };\r\n\r\n    const handleLatitudeChange = (e) => {\r\n        setLatitude(e.target.value);\r\n    };\r\n\r\n    const handleLongitudeChange = (e) => {\r\n        setLongitude(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Form style={{ width: '100%' }} onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label>Tên trạm đọc/ tủ sách</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    required\r\n                    onChange={handleNameChange}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label>Mô tả</Form.Label>\r\n                <Form.Control\r\n                    as='textarea'\r\n                    rows={5}\r\n                    onChange={handleDescChange}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label>Địa chỉ</Form.Label>\r\n                <Form.Control\r\n                    as='textarea'\r\n                    rows={5}\r\n                    required\r\n                    onChange={handleAddressChange}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label>Latitude</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    required\r\n                    onChange={handleLatitudeChange}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label>Longitude</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    required\r\n                    onChange={handleLongitudeChange}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n                style={{ display: 'flex', justifyContent: 'space-between' }}\r\n            >\r\n                <Button variant='danger' onClick={props.handleClose}>\r\n                    Huỷ\r\n                </Button>\r\n                <Button variant='primary' type='submit'>\r\n                    Thêm\r\n                </Button>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default FormAddStation;\r\n","import { useEffect, useState } from 'react';\r\nimport { Table, Button, Modal, ListGroup } from 'react-bootstrap';\r\nimport './BookManager.css';\r\nimport axios from 'axios';\r\nimport FomrEditBook from './FormEditBook';\r\nimport FormAddCategory from './FormAddCategory';\r\nimport FormAddStation from './FormAddStation';\r\n\r\nexport default (props) => {\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [dialog, setDialog] = useState(null);\r\n    function setShowInserting(_id = null) {}\r\n    const [showedBook, setShowedBook] = useState(null);\r\n    const [showedCategory, setShowedCategory] = useState(null);\r\n    const [showedStation, setShowedStation] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('/api/book/query', { params: { limit: 30, page: page } })\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.type == 'Valid') setData(res.data);\r\n                else setData([]);\r\n            });\r\n    }, [page]);\r\n    const updateBook = (book) => {\r\n        let tmp = [...data];\r\n\r\n        for (let i = 0; i < tmp.length; i++) {\r\n            if (tmp[i]._id == book._id) {\r\n                tmp[i] = book;\r\n                setData(tmp);\r\n                return;\r\n            }\r\n        }\r\n        tmp.unshift(book);\r\n        setData(tmp);\r\n    };\r\n    const pushIdTodelete = (_id) => {\r\n        axios\r\n            .post('/api/book/delete', { _id: _id })\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                if (res.type == 'Valid') {\r\n                    console.log(res);\r\n                    setDialog(null);\r\n                    let tmp = [...data];\r\n\r\n                    for (let i = 0; i < tmp.length; i++) {\r\n                        if (tmp[i]._id == _id) {\r\n                            tmp.splice(i, 1);\r\n                            setData(tmp);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='modal-container'>\r\n            <Modal\r\n                show={!!showedBook}\r\n                onHide={() => setShowedBook(null)}\r\n                backdrop='static'\r\n                // keyboard={false}\r\n                dialogClassName='modal-90w'\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {showedBook && showedBook._id ? 'Edit' : 'Add'} book\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {showedBook && (\r\n                        <FomrEditBook\r\n                            updateBook={updateBook}\r\n                            handleClose={() => setShowedBook(null)}\r\n                        >\r\n                            {showedBook}\r\n                        </FomrEditBook>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal\r\n                show={!!dialog}\r\n                onHide={() => setDialog(null)}\r\n                backdrop='static'\r\n                // keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{dialog && dialog.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{dialog && dialog.message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    {dialog &&\r\n                        dialog.button &&\r\n                        dialog.button.map((e) => (\r\n                            <Button\r\n                                key={e.title}\r\n                                onClick={() => {\r\n                                    e.action();\r\n                                }}\r\n                                variant={e.style}\r\n                            >\r\n                                {e.title}\r\n                            </Button>\r\n                        ))}\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal\r\n                show={!!showedCategory}\r\n                onHide={() => setShowedCategory(null)}\r\n                backdrop='static'\r\n                // keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Thêm thể loại sách</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {showedCategory && (\r\n                        <FormAddCategory\r\n                            handleClose={() => setShowedCategory(null)}\r\n                        />\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal\r\n                show={!!showedStation}\r\n                onHide={() => setShowedStation(null)}\r\n                backdrop='static'\r\n                // keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Thêm tủ sách/điểm đọc</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {showedStation && (\r\n                        <FormAddStation\r\n                            handleClose={() => setShowedStation(null)}\r\n                        />\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n            <div>\r\n                <h2>Quản lí sách</h2>\r\n                <div className='all-btn'>\r\n                    <Button\r\n                        className='btn btn-new-book'\r\n                        onClick={() => setShowedBook({ _id: null })}\r\n                    >\r\n                        Thêm sách\r\n                    </Button>\r\n                    <Button\r\n                        className='btn btn-new-category'\r\n                        onClick={() => setShowedCategory(true)}\r\n                    >\r\n                        Thêm Thể loại\r\n                    </Button>\r\n                    <Button\r\n                        className='btn btn-new-station'\r\n                        onClick={() => setShowedStation(true)}\r\n                    >\r\n                        Thêm Tủ sách\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <Table\r\n                responsive\r\n                className='table'\r\n                striped\r\n                bordered\r\n                hover\r\n                size='sm'\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Sku</th>\r\n                        <th>Tên</th>\r\n                        <th>Giá cũ</th>\r\n                        <th>Giá mới</th>\r\n                        <th>Số lượng</th>\r\n                        <th>Mô tả</th>\r\n                        <th>Khác</th>\r\n                        <th>Hành động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.length != 0 ? (\r\n                        data.map((e, index) => (\r\n                            <tr style={{ cursor: 'pointer' }} key={e._id}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{e.sku}</td>\r\n                                <td>{e.name}</td>\r\n                                <td>{e.oldprice}</td>\r\n                                <td>{e.newprice}</td>\r\n                                <td>{e.quantity}</td>\r\n                                <td>\r\n                                    {e.description\r\n                                        ? e.description.substr(0, 40) + '...'\r\n                                        : ''}\r\n                                </td>\r\n                                <td onClick={() => setShowedBook(e)}>\r\n                                    {e.others &&\r\n                                        e.others.slice(0, 3).map((e) => (\r\n                                            <p\r\n                                                style={{\r\n                                                    fontSize: 14,\r\n                                                    margin: 0,\r\n                                                }}\r\n                                            >\r\n                                                {e.key + ': ' + e.value}\r\n                                            </p>\r\n                                        ))}\r\n                                    {e.others && e.others.length > 3 && (\r\n                                        <p>...</p>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <Button\r\n                                        onClick={() => setShowedBook(e)}\r\n                                        variant='secondary'\r\n                                    >\r\n                                        Sửa\r\n                                    </Button>\r\n\r\n                                    {/* <Button\r\n                                        style={{ zIndex: 1 }}\r\n                                        onClick={() => {\r\n                                            setDialog({\r\n                                                title: 'Xóa',\r\n                                                message:\r\n                                                    'Bạn có chắc muốn xóa sách ' +\r\n                                                    e.name,\r\n                                                button: [\r\n                                                    {\r\n                                                        title: 'Hủy',\r\n                                                        action: () =>\r\n                                                            setDialog(null),\r\n                                                    },\r\n                                                    {\r\n                                                        title: 'Xóa',\r\n                                                        style: 'danger',\r\n                                                        action: () => {\r\n                                                            console.log(e);\r\n                                                            pushIdTodelete(\r\n                                                                e._id\r\n                                                            );\r\n                                                        },\r\n                                                    },\r\n                                                ],\r\n                                            });\r\n                                        }}\r\n                                        style={{ marginLeft: 10 }}\r\n                                        variant='danger'\r\n                                    >\r\n                                        Xóa\r\n                                    </Button> */}\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>Không có dữ liệu</tr>\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n            <ul className='btn-page'>\r\n                <li>{page > 3 && <p>...</p>}</li>\r\n\r\n                <li onClick={() => setPage(page - 2)}>\r\n                    {page - 2 > 0 && <p>{page - 2}</p>}{' '}\r\n                </li>\r\n\r\n                <li onClick={() => setPage(page - 1)}>\r\n                    {page - 1 > 0 && <p>{page - 1}</p>}{' '}\r\n                </li>\r\n\r\n                <li style={{ backgroundColor: '#ff0000' }}>\r\n                    <p>{page}</p>\r\n                </li>\r\n                <li onClick={() => setPage(page + 1)}>\r\n                    <p>{page + 1}</p>\r\n                </li>\r\n                <li onClick={() => setPage(page + 2)}>\r\n                    <p>{page + 2}</p>\r\n                </li>\r\n                <li>\r\n                    {' '}\r\n                    <p>...</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nimport './Book.css';\r\n\r\nfunction Book(props) {\r\n    const data = props.data;\r\n    console.log(data);\r\n    return (\r\n        <div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Hình ảnh</th>\r\n                        <th>Tên sách</th>\r\n                        <th>Số lượng</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((child, index) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>\r\n                                    <img\r\n                                        src={child.book.imageurl}\r\n                                        alt='img'\r\n                                        className='book-img'\r\n                                    />\r\n                                </td>\r\n                                <td>{child.book.name}</td>\r\n                                <td>{child.quantity}</td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Book;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Modal, Button, ButtonGroup } from 'react-bootstrap';\r\nimport Book from './Book';\r\n\r\nimport axios from 'axios';\r\n\r\nfunction OrderDetail(props) {\r\n    const [bookList, setBookList] = useState([]);\r\n    const [pending, setPending] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.order) {\r\n            setBookList(props.order.bookList);\r\n            setSuccess(props.order.success);\r\n            setPending(props.order.pending);\r\n        }\r\n    }, [props.order]);\r\n\r\n    const discardOrder = () => {\r\n        setLoading(true);\r\n        axios\r\n            .post('/api/order/status', { id: props.order._id, status: 1 })\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                if (res.type == 'Valid') {\r\n                    setPending(false);\r\n                    setSuccess(false);\r\n                    setLoading(false);\r\n                    props.refreshPage();\r\n                }\r\n            });\r\n    };\r\n\r\n    const setSuccessOrder = () => {\r\n        setLoading(true);\r\n        axios\r\n            .post('/api/order/status', { id: props.order._id, status: 0 })\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                if (res.type == 'Valid') {\r\n                    setPending(false);\r\n                    setSuccess(true);\r\n                    setLoading(false);\r\n                    props.refreshPage();\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                show={props.show}\r\n                onHide={props.handleClose}\r\n                backdrop='static'\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Chi tiết đơn sách</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Book data={bookList} />\r\n                </Modal.Body>\r\n                {loading ? (\r\n                    <Modal.Footer>\r\n                        <p>Vui lòng chờ...</p>\r\n                    </Modal.Footer>\r\n                ) : (\r\n                    <Modal.Footer>\r\n                        {pending ? (\r\n                            <ButtonGroup>\r\n                                <Button variant='danger' onClick={discardOrder}>\r\n                                    Hủy đơn\r\n                                </Button>\r\n                                <Button\r\n                                    variant='success'\r\n                                    onClick={setSuccessOrder}\r\n                                >\r\n                                    Giao hàng thành công\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        ) : (\r\n                            <div>\r\n                                <p>\r\n                                    Tình trạng:{' '}\r\n                                    {success ? 'Giao thành công' : 'Đã hủy'}\r\n                                </p>\r\n                                {success ? (\r\n                                    <Button\r\n                                        variant='danger'\r\n                                        onClick={discardOrder}\r\n                                    >\r\n                                        Hủy đơn\r\n                                    </Button>\r\n                                ) : null}\r\n                            </div>\r\n                        )}\r\n                    </Modal.Footer>\r\n                )}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderDetail;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nimport './OrderManagement.css';\r\nimport OrderDetail from './OrderDetail';\r\n\r\nfunction OrderManagement() {\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const [order, setOrder] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('/api/order', { params: { page: page, limit: 10 } })\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                if (res.type == 'Valid') {\r\n                    setData(res.data);\r\n                }\r\n            });\r\n    }, [page]);\r\n\r\n    const refreshPage = (order) => {\r\n        axios\r\n            .get('/api/order', { params: { page: page, limit: 10 } })\r\n            .then((res) => res.data)\r\n            .then((res) => {\r\n                if (res.type == 'Valid') {\r\n                    setData(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n    const handleSeeDetail = (order) => {\r\n        setShow(true);\r\n        setOrder(order);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2>Đơn đặt sách</h2>\r\n            <Table\r\n                responsive\r\n                className='table'\r\n                striped\r\n                bordered\r\n                hover\r\n                size='sm'\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Mã đơn hàng</th>\r\n                        <th>Ngày đặt</th>\r\n                        <th>Thông tin người đặt</th>\r\n                        <th>Thông tin đơn hàng</th>\r\n                        <th>Tình trạng</th>\r\n                        <th>Tổng tiền</th>\r\n                        <th>Hành động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((child, index) => {\r\n                        return (\r\n                            <tr key={child._id}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{child.orderId}</td>\r\n                                <td>{child.orderDate}</td>\r\n                                <td>\r\n                                    {child.user.name}\r\n                                    <br />\r\n                                    {child.tel}\r\n                                    <br />\r\n                                    {child.address}\r\n                                </td>\r\n                                <td>\r\n                                    {child.shipping\r\n                                        ? 'Giao hàng tận nơi'\r\n                                        : 'Lấy tại tủ sách'}\r\n                                    <br />\r\n                                    {child.payment\r\n                                        ? 'Thanh toán trực tiếp'\r\n                                        : 'Thanh toán bằng Momo'}\r\n                                </td>\r\n                                <td>\r\n                                    {child.pending\r\n                                        ? 'Chưa xử lý'\r\n                                        : child.success\r\n                                        ? 'Thành công'\r\n                                        : 'Đã hủy'}\r\n                                </td>\r\n                                <td>{child.total}</td>\r\n                                <td>\r\n                                    <Button\r\n                                        variant='success'\r\n                                        onClick={() => handleSeeDetail(child)}\r\n                                    >\r\n                                        Xem chi tiết\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n            <OrderDetail\r\n                order={order}\r\n                show={show}\r\n                handleClose={handleClose}\r\n                refreshPage={refreshPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderManagement;\r\n","import './App.css';\r\nimport LoginForm from './components/LoginForm';\r\nimport { Modal, Navbar, Container, Nav } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport BookManager from './components/BookManager';\r\nimport OrderManagement from './components/OrderManagement';\r\nimport { useState, useEffect } from 'react';\r\nfunction App() {\r\n    console.log(document.cookie.split(';'));\r\n    function checkLogined() {\r\n        let output = {};\r\n        document.cookie.split(/\\s*;\\s*/).forEach(function (pair) {\r\n            pair = pair.split(/\\s*=\\s*/);\r\n            output[pair[0]] = pair.splice(1).join('=');\r\n        });\r\n\r\n        return !!output['admin'];\r\n    }\r\n    useEffect(() => {\r\n        if (!checkLogined()) handleShow();\r\n    }, []);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n        <div className='App'>\r\n            <Router>\r\n                <Navbar bg='light' expand='lg'>\r\n                    <Container>\r\n                        <Navbar.Brand href='#home'>\r\n                            <img alt='logo' src='/logo.png' className='logo' />\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                        <Navbar.Collapse id='basic-navbar-nav'>\r\n                            <Nav className='me-auto'>\r\n                                <Nav.Link as={Link} to='/'>\r\n                                    Quản lý sách\r\n                                </Nav.Link>\r\n                                <Nav.Link as={Link} to='/order'>\r\n                                    Đơn đặt sách\r\n                                </Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n                {/* <Modal\r\n                show={show}\r\n                // onHide={handleClose}\r\n                backdrop='static'\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Login</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <LoginForm handleClose={handleClose} />\r\n                </Modal.Body>\r\n            </Modal> */}\r\n\r\n                <Switch>\r\n                    <Route path='/order'>\r\n                        <OrderManagement />\r\n                    </Route>\r\n                    <Route path='/'>\r\n                        <BookManager />\r\n                    </Route>\r\n                    {/* <Route path='/category'>\r\n                </Route> */}\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}